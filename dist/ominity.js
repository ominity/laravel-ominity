const r={config:{},init(){document.addEventListener("submit",e=>{var c;const t=e.target;if(!(t instanceof HTMLFormElement)||!t.matches("form.ominity-form[data-form]"))return;const a=t.getAttribute("data-form")||"",o=t.getAttribute("data-recaptcha"),s=(c=document.querySelector('meta[name="recaptcha-site-key"]'))==null?void 0:c.getAttribute("content"),l=new CustomEvent("form:submit",{detail:{formId:a,recaptchaVersion:o},cancelable:!0});if(!t.dispatchEvent(l)){e.preventDefault();return}if(this.disableSubmitButtons(t),o==="v3"){if(e.preventDefault(),typeof grecaptcha>"u"){console.warn("reCAPTCHA v3 is not loaded.");return}let i=t.querySelector('input[name="g-recaptcha-response"]');i||(i=document.createElement("input"),i.type="hidden",i.name="g-recaptcha-response",t.appendChild(i)),grecaptcha.ready(()=>{grecaptcha.execute(s,{action:"submit"}).then(d=>{i.value=d,this.submitForm(t,a)})})}else t.getAttribute("data-role")==="ajax"&&(e.preventDefault(),this.submitForm(t,a))})},submitForm(e,t){e.getAttribute("data-role")==="ajax"?this.handleFormAjaxSubmit(e,t):e.submit()},handleFormAjaxSubmit(e,t){var o;const a=new FormData(e);e.querySelectorAll(".alert.alert-success").forEach(s=>s.remove()),fetch(e.action,{method:e.method||"POST",body:a,headers:{"X-Requested-With":"XMLHttpRequest","X-CSRF-TOKEN":((o=document.querySelector('meta[name="csrf-token"]'))==null?void 0:o.getAttribute("content"))||""}}).then(s=>s.json()).then(s=>{if(e.getAttribute("data-recaptcha")==="v3"){const n=e.querySelector('input[name="g-recaptcha-response"]');n&&(n.value="")}if(r.enableSubmitButtons(e),e.querySelectorAll(".has-validation").forEach(n=>n.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(n=>n.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(n=>n.remove()),e.dispatchEvent(new CustomEvent("form:submitted",{detail:{formId:t,data:s}})),s.success){e.reset();const n=new CustomEvent("form:success",{detail:{formId:t,data:s},cancelable:!0});if(!!e.dispatchEvent(n)){const i=document.createElement("div");i.className="alert alert-success",i.textContent=(s==null?void 0:s.message)||"Your form was successfully submitted.",e.prepend(i)}}else if(s.errors){const n=new CustomEvent("form:errors",{detail:{formId:t,data:s},cancelable:!0});!e.dispatchEvent(n)||r.handleFormErrors(e,s.errors)}else e.dispatchEvent(new CustomEvent("form:unknown",{detail:{formId:t,data:s}}))}).catch(s=>{console.error("Form submit error:",s),e.dispatchEvent(new CustomEvent("form:fail",{detail:{formId:t,error:s}}))})},handleFormErrors(e,t){e.querySelectorAll(".has-validation").forEach(a=>a.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(a=>a.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(a=>a.remove()),Object.entries(t).forEach(([a,o])=>{const s=o[0];let l=`[name="${a}"], [name="${a}[]"]`;if(a.includes(".")){const c=a.replace(/\./g,"][");l+=`, [name="${c}"]`}const n=e.querySelectorAll(l);if(n.length>0){let c=!1;if(n.forEach(i=>{if(i.type==="hidden"||i.offsetParent===null)r.showToast(s,"danger"),c=!0;else{i.classList.add("is-invalid");const u=i.closest(".input-group");u&&u.classList.add("has-validation")}}),!c){const i=n[0];i.type==="checkbox"||i.type==="radio"?n[n.length-1].insertAdjacentHTML("afterend",`<div class="invalid-feedback">${s}</div>`):i.insertAdjacentHTML("afterend",`<div class="invalid-feedback">${s}</div>`)}}else r.showToast(s,"danger")})},showToast(e,t="danger"){typeof r.config.toastHandler=="function"?r.config.toastHandler({type:t,message:e}):typeof window.$<"u"&&typeof window.$.fn.showToast=="function"?window.$.fn.showToast({type:t,title:e}):console.warn(`[${t.toUpperCase()}] ${e}`)},enableSubmitButtons(e){if(r.config.disableSubmitDuringRequest!==!1){const a=e.getAttribute("data-form")||"",o=new CustomEvent("form:submit-enabled",{detail:{formId:a},cancelable:!0});!e.dispatchEvent(o)||e.querySelectorAll('button[type="submit"]').forEach(n=>{n.disabled=!1,n.classList.remove("disabled")})}},disableSubmitButtons(e){if(r.config.disableSubmitDuringRequest!==!1){const a=e.getAttribute("data-form")||"",o=new CustomEvent("form:submit-disabled",{detail:{formId:a},cancelable:!0});!e.dispatchEvent(o)||e.querySelectorAll('button[type="submit"]').forEach(n=>{n.disabled=!0,n.classList.add("disabled")})}}};window.OminityForms=r;
//# sourceMappingURL=ominity.js.map
