(function(d,a){typeof exports=="object"&&typeof module<"u"?a(exports):typeof define=="function"&&define.amd?define(["exports"],a):(d=typeof globalThis<"u"?globalThis:d||self,a(d.Ominity={}))})(this,function(d){"use strict";const a={config:{},init(){document.querySelectorAll("form.ominity-form[data-form]").forEach(e=>{var t;const s=e.getAttribute("data-form")||"",i=e.getAttribute("data-recaptcha"),u=(t=document.querySelector('meta[name="recaptcha-site-key"]'))==null?void 0:t.getAttribute("content");e.addEventListener("submit",r=>{const n=new CustomEvent("form:submit",{detail:{formId:s,recaptchaVersion:i},cancelable:!0});if(!e.dispatchEvent(n)){r.preventDefault();return}if(a.config.disableSubmitDuringRequest!==!1){const o=e.querySelector('button[type="submit"]');o&&(o.disabled=!0,o.classList.add("disabled"))}if(i==="v3"){if(typeof grecaptcha>"u"){console.warn("reCAPTCHA v3 is not loaded.");return}let o=e.querySelector('input[name="g-recaptcha-response"]');o||(o=document.createElement("input"),o.type="hidden",o.name="g-recaptcha-response",e.appendChild(o)),o.value===""&&(r.preventDefault(),grecaptcha.ready(()=>{grecaptcha.execute(u,{action:"submit"}).then(h=>{o.value=h,a.submitForm(e,s)})}))}else e.getAttribute("data-role")==="ajax"&&(r.preventDefault(),a.submitForm(e,s))})})},submitForm(e,s){e.getAttribute("data-role")==="ajax"?this.handleFormAjaxSubmit(e,s):e.submit()},handleFormAjaxSubmit(e,s){var u;const i=new FormData(e);fetch(e.action,{method:e.method||"POST",body:i,headers:{"X-Requested-With":"XMLHttpRequest","X-CSRF-TOKEN":((u=document.querySelector('meta[name="csrf-token"]'))==null?void 0:u.getAttribute("content"))||""}}).then(t=>t.json()).then(t=>{if(e.getAttribute("data-recaptcha")==="v3"){const n=e.querySelector('input[name="g-recaptcha-response"]');n&&(n.value="")}if(e.querySelectorAll(".has-validation").forEach(n=>n.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(n=>n.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(n=>n.remove()),e.querySelectorAll(".alert.alert-success").forEach(n=>n.remove()),e.dispatchEvent(new CustomEvent("form:submitted",{detail:{formId:s,data:t}})),t.success){e.reset();const n=new CustomEvent("form:success",{detail:{formId:s,data:t},cancelable:!0});if(!!e.dispatchEvent(n)){const c=document.createElement("div");c.className="alert alert-success",c.textContent=(t==null?void 0:t.message)||"Your form was successfully submitted.",e.prepend(c)}}else if(t.errors){const n=new CustomEvent("form:errors",{detail:{formId:s,data:t},cancelable:!0});!e.dispatchEvent(n)||a.handleFormErrors(e,t.errors)}else e.dispatchEvent(new CustomEvent("form:unknown",{detail:{formId:s,data:t}}))}).catch(t=>{console.error("Form submit error:",t),e.dispatchEvent(new CustomEvent("form:fail",{detail:{formId:s,error:t}}))})},handleFormErrors(e,s){e.querySelectorAll(".has-validation").forEach(i=>i.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(i=>i.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(i=>i.remove()),Object.entries(s).forEach(([i,u])=>{const t=u[0];let r=`[name="${i}"], [name="${i}[]"]`;if(i.includes(".")){const l=i.replace(/\./g,"][");r+=`, [name="${l}"]`}const n=e.querySelectorAll(r);if(n.length>0){let l=!1;if(n.forEach(c=>{if(c.type==="hidden"||c.offsetParent===null)a.showToast(t,"danger"),l=!0;else{c.classList.add("is-invalid");const h=c.closest(".input-group");h&&h.classList.add("has-validation")}}),!l){const c=n[0];c.type==="checkbox"||c.type==="radio"?n[n.length-1].insertAdjacentHTML("afterend",`<div class="invalid-feedback">${t}</div>`):c.insertAdjacentHTML("afterend",`<div class="invalid-feedback">${t}</div>`)}}else a.showToast(t,"danger")})},showToast(e,s="danger"){typeof a.config.toastHandler=="function"?a.config.toastHandler({type:s,message:e}):typeof window.$<"u"&&typeof window.$.fn.showToast=="function"?window.$.fn.showToast({type:s,title:e}):console.warn(`[${s.toUpperCase()}] ${e}`)}};window.OminityForms=a,d.OminityForms=a,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
