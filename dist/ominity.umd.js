(function(d,o){typeof exports=="object"&&typeof module<"u"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(d=typeof globalThis<"u"?globalThis:d||self,o(d.Ominity={}))})(this,function(d){"use strict";const o={config:{},init(){document.addEventListener("submit",e=>{var r;const t=e.target;if(!(t instanceof HTMLFormElement)||!t.matches("form.ominity-form[data-form]"))return;const i=t.getAttribute("data-form")||"",c=t.getAttribute("data-recaptcha"),s=(r=document.querySelector('meta[name="recaptcha-site-key"]'))==null?void 0:r.getAttribute("content"),l=new CustomEvent("form:submit",{detail:{formId:i,recaptchaVersion:c},cancelable:!0});if(!t.dispatchEvent(l)){e.preventDefault();return}if(this.disableSubmitButtons(t),c==="v3"){if(e.preventDefault(),typeof grecaptcha>"u"){console.warn("reCAPTCHA v3 is not loaded.");return}let a=t.querySelector('input[name="g-recaptcha-response"]');a||(a=document.createElement("input"),a.type="hidden",a.name="g-recaptcha-response",t.appendChild(a)),grecaptcha.ready(()=>{grecaptcha.execute(s,{action:"submit"}).then(u=>{a.value=u,this.submitForm(t,i)})})}else t.getAttribute("data-role")==="ajax"&&(e.preventDefault(),this.submitForm(t,i))})},submitForm(e,t){e.getAttribute("data-role")==="ajax"?this.handleFormAjaxSubmit(e,t):e.submit()},handleFormAjaxSubmit(e,t){var c;const i=new FormData(e);e.querySelectorAll(".alert.alert-success").forEach(s=>s.remove()),fetch(e.action,{method:e.method||"POST",body:i,headers:{"X-Requested-With":"XMLHttpRequest","X-CSRF-TOKEN":((c=document.querySelector('meta[name="csrf-token"]'))==null?void 0:c.getAttribute("content"))||""}}).then(s=>s.json()).then(s=>{if(e.getAttribute("data-recaptcha")==="v3"){const n=e.querySelector('input[name="g-recaptcha-response"]');n&&(n.value="")}if(o.enableSubmitButtons(e),e.querySelectorAll(".has-validation").forEach(n=>n.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(n=>n.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(n=>n.remove()),e.dispatchEvent(new CustomEvent("form:submitted",{detail:{formId:t,data:s}})),s.success){e.reset();const n=new CustomEvent("form:success",{detail:{formId:t,data:s},cancelable:!0});if(!!e.dispatchEvent(n)){const a=document.createElement("div");a.className="alert alert-success",a.textContent=(s==null?void 0:s.message)||"Your form was successfully submitted.",e.prepend(a)}}else if(s.errors){const n=new CustomEvent("form:errors",{detail:{formId:t,data:s},cancelable:!0});!e.dispatchEvent(n)||o.handleFormErrors(e,s.errors)}else e.dispatchEvent(new CustomEvent("form:unknown",{detail:{formId:t,data:s}}))}).catch(s=>{console.error("Form submit error:",s),e.dispatchEvent(new CustomEvent("form:fail",{detail:{formId:t,error:s}}))})},handleFormErrors(e,t){e.querySelectorAll(".has-validation").forEach(i=>i.classList.remove("has-validation")),e.querySelectorAll(".is-invalid").forEach(i=>i.classList.remove("is-invalid")),e.querySelectorAll(".invalid-feedback").forEach(i=>i.remove()),Object.entries(t).forEach(([i,c])=>{const s=c[0];let l=`[name="${i}"], [name="${i}[]"]`;if(i.includes(".")){const r=i.replace(/\./g,"][");l+=`, [name="${r}"]`}const n=e.querySelectorAll(l);if(n.length>0){let r=!1;if(n.forEach(a=>{if(a.type==="hidden"||a.offsetParent===null)o.showToast(s,"danger"),r=!0;else{a.classList.add("is-invalid");const m=a.closest(".input-group");m&&m.classList.add("has-validation")}}),!r){const a=n[0];a.type==="checkbox"||a.type==="radio"?n[n.length-1].insertAdjacentHTML("afterend",`<div class="invalid-feedback">${s}</div>`):a.insertAdjacentHTML("afterend",`<div class="invalid-feedback">${s}</div>`)}}else o.showToast(s,"danger")})},showToast(e,t="danger"){typeof o.config.toastHandler=="function"?o.config.toastHandler({type:t,message:e}):typeof window.$<"u"&&typeof window.$.fn.showToast=="function"?window.$.fn.showToast({type:t,title:e}):console.warn(`[${t.toUpperCase()}] ${e}`)},enableSubmitButtons(e){if(o.config.disableSubmitDuringRequest!==!1){const i=e.getAttribute("data-form")||"",c=new CustomEvent("form:submit-enabled",{detail:{formId:i},cancelable:!0});!e.dispatchEvent(c)||e.querySelectorAll('button[type="submit"]').forEach(n=>{n.disabled=!1,n.classList.remove("disabled")})}},disableSubmitButtons(e){if(o.config.disableSubmitDuringRequest!==!1){const i=e.getAttribute("data-form")||"",c=new CustomEvent("form:submit-disabled",{detail:{formId:i},cancelable:!0});!e.dispatchEvent(c)||e.querySelectorAll('button[type="submit"]').forEach(n=>{n.disabled=!0,n.classList.add("disabled")})}}};window.OminityForms=o,d.OminityForms=o,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
